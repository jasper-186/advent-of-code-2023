// <auto-generated />
using AdventOfCode.Day05;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdventOfCode.Migrations
{
    [DbContext(typeof(Day05Context))]
    partial class Day05ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("AdventOfCode.Day05.FertilizerWater", b =>
                {
                    b.Property<long>("FertilizerWaterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("FertilizerHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FertilizerLow")
                        .HasColumnType("INTEGER");

                    b.Property<long>("WaterHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("WaterLow")
                        .HasColumnType("INTEGER");

                    b.HasKey("FertilizerWaterId");

                    b.ToTable("FertilizerWaters");
                });

            modelBuilder.Entity("AdventOfCode.Day05.HumidityLocation", b =>
                {
                    b.Property<long>("HumidityLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("HumidityHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("HumidityLow")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LocationHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LocationLow")
                        .HasColumnType("INTEGER");

                    b.HasKey("HumidityLocationId");

                    b.ToTable("HumidityLocations");
                });

            modelBuilder.Entity("AdventOfCode.Day05.LightTemperature", b =>
                {
                    b.Property<long>("LightTemperatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("LightHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LightLow")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TemperatureHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TemperatureLow")
                        .HasColumnType("INTEGER");

                    b.HasKey("LightTemperatureId");

                    b.ToTable("LightTemperatures");
                });

            modelBuilder.Entity("AdventOfCode.Day05.Seed", b =>
                {
                    b.Property<long>("SeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("SeedId");

                    b.ToTable("Seeds");
                });

            modelBuilder.Entity("AdventOfCode.Day05.SeedSoil", b =>
                {
                    b.Property<long>("SeedSoilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("SeedHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SeedLow")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SoilHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SoilLow")
                        .HasColumnType("INTEGER");

                    b.HasKey("SeedSoilId");

                    b.ToTable("SeedSoils");
                });

            modelBuilder.Entity("AdventOfCode.Day05.SoilFertilizer", b =>
                {
                    b.Property<long>("SoilFertilizerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("FertilizerHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FertilizerLow")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SoilHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SoilLow")
                        .HasColumnType("INTEGER");

                    b.HasKey("SoilFertilizerId");

                    b.ToTable("SoilFertilizers");
                });

            modelBuilder.Entity("AdventOfCode.Day05.TemperatureHumidity", b =>
                {
                    b.Property<long>("TemperatureHumidityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("HumidityHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("HumidityLow")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TemperatureHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TemperatureLow")
                        .HasColumnType("INTEGER");

                    b.HasKey("TemperatureHumidityId");

                    b.ToTable("TemperatureHumiditys");
                });

            modelBuilder.Entity("AdventOfCode.Day05.WaterLight", b =>
                {
                    b.Property<long>("WaterLightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("LightHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LightLow")
                        .HasColumnType("INTEGER");

                    b.Property<long>("WaterHigh")
                        .HasColumnType("INTEGER");

                    b.Property<long>("WaterLow")
                        .HasColumnType("INTEGER");

                    b.HasKey("WaterLightId");

                    b.ToTable("WaterLights");
                });
#pragma warning restore 612, 618
        }
    }
}
